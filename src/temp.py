import numpy as np
import math
import cv2

def visualize(c):

    vis = np.zeros((800, 500, 3), np.uint8)

    for x in range(800):
        for y in range(500):

            if ((x - 300*2)**2 + (y - 185*2)**2 < ((80+(c*2))**2)) or (((0.5773502691896258 * x) + y < (255.88457268119896*2 + (((c*2))*(math.sqrt(0.5773502691896258**2 + 1))))) and (x < (235*2 + ((c*2)))) and ((-0.5773502691896256 * x) + y > (-55.88457268119893*2 - (((c*2))*(math.sqrt(0.5773502691896256**2 + 1))))) and ((0.5773502691896256 * x) + y > (175.05553499465134*2 - (((c*2))*(math.sqrt(0.5773502691896256**2 + 1))))) and (x > (165*2 - ((c*2)))) and ((-0.5773502691896258 * x) + y < (24.944465005348647*2 + (((c*2))*(math.sqrt(0.5773502691896258**2 + 1)))))) or (((1.2318840579710144 * x) + y > (229.3478260869565*2 - (((c*2))*(math.sqrt(1.2318840579710144**2 + 1))))) and ((-0.31645569620253167 * x) + y < (173.60759493670886*2 + (((c*2))*(math.sqrt(0.31645569620253167**2 + 1))))) and (((-0.8571428571428571 * x) + y > (111.42857142857143*2 - (((c*2))*(math.sqrt(0.8571428571428571**2 + 1))))) or ((3.2 * x) + y < (436.0*2 + (((c*2))*(math.sqrt(3.2**2 + 1))))))) or (x <= ((c*2))) or (x >= (800 - ((c*2)))) or (y <= ((c*2))) or (y >= (500 - ((c*2)))):

                vis[x][y] = (0, 255, 255)

            if ((x - 300*2)**2 + (y - 185*2)**2 < (40*2)**2) or (((0.5773502691896258 * x) + y < 255.88457268119896*2) and (x < 235*2) and ((-0.5773502691896256 * x) + y > -55.88457268119893*2) and ((0.5773502691896256 * x) + y > 175.05553499465134*2) and (x > 165*2) and ((-0.5773502691896258 * x) + y < 24.944465005348647*2) or ((1.2318840579710144 * x) + y > 229.3478260869565*2) and ((-0.31645569620253167 * x) + y < 173.60759493670886*2) and (((-0.8571428571428571 * x) + y > 111.42857142857143*2) or ((3.2 * x) + y < 436.0*2))):

                vis[x][y] = (0, 0, 255)

    vis = cv2.rotate(vis, cv2.ROTATE_90_COUNTERCLOCKWISE)

    cv2.imshow('Obstacle Space', vis)
    cv2.waitKey(0)

    return vis


visualize(5)